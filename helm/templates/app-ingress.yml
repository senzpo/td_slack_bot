---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.host }}
  namespace: {{ .Values.namespace }}
  annotations:
    kubernetes.io/ingress.class: "{{ .Values.ingress.class }}"
    cert-manager.io/cluster-issuer: "{{ .Values.ingress.letsencryptClusterIssuer }}"
    nginx.ingress.kubernetes.io/ssl-redirect: "{{ .Values.ingress.sslRedirect }}"
    nginx.ingress.kubernetes.io/proxy-body-size: {{ .Values.ingress.proxyBodySize }}
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "{{ .Values.ingress.proxyConnectTimeout }}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "{{ .Values.ingress.proxySendTimeout }}"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "{{ .Values.ingress.proxyReadTimeout }}"
{{- if eq .Values.ingress.httpAuth true }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: ingress-{{ .Values.serviceName }}-httpauth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
{{- end }}
spec:
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: app-{{ .Values.serviceName }}
                port:
                  number: 80
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: ssl-{{ .Values.ingress.host }}

